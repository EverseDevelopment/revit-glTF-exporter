version: 2.1

orbs:
    win: circleci/windows@2.2.0
  
workflows:
    version: 2
    main:
        jobs:
            - build
            - release:
                filters:
                    branches:
                        only:
                            - master
                requires:
                    - build

jobs:
    build:
        executor:
            name: win/default
        steps:
            - checkout:
                path: C:\Users\circleci\project
            - restore_cache:
                keys:
                    - dotnet-packages
            - run:
                name: "Restore packages"
                command: nuget restore ./Revit_glTF_Exporter.sln
            - run:
                name: "Update Revit API Version"
                command: dotnet add Revit_glTF_Exporter package Revit_All_Main_Versions_API_x64 --version 2017.0.2
            - run:
                name: "Run Build step"
                command: MSBuild ./Revit_glTF_Exporter.sln -p:Configuration=R2017
            - run:
                name: "Update Revit API Version"
                command: dotnet add Revit_glTF_Exporter package Revit_All_Main_Versions_API_x64 --version 2018.0.2
            - run:
                name: "Run Build step"
                command: MSBuild ./Revit_glTF_Exporter.sln -p:Configuration=R2018
            - run:
                name: "Update Revit API Version"
                command: dotnet add Revit_glTF_Exporter package Revit_All_Main_Versions_API_x64 --version 2019.0.1
            - run:
                name: "Run Build step"
                command: MSBuild ./Revit_glTF_Exporter.sln -p:Configuration=R2019
            - run:
                name: "Update Revit API Version"
                command: dotnet add Revit_glTF_Exporter package Revit_All_Main_Versions_API_x64 --version 2020.0.1
            - run:
                name: "Run Build step"
                command: MSBuild ./Revit_glTF_Exporter.sln -p:Configuration=R2020
            - save_cache:
                paths:
                    - C:\Users\circleci\project\.nuget\packages
                key: dotnet-packages
            - run:
                name: "Compress artifacts"
                command: |
                    mkdir ./tmp
                    cd ./Revit_glTF_Exporter
                    Compress-Archive Revit-glTF-Exporter.bundle ../tmp/Revit-glTF-Exporter.bundle.zip
                shell: powershell.exe
            - run:
                name: "Copy package.ship"
                command: |
                    cp package.ship ./tmp/package.ship
            - store_artifacts:
                path: .\Revit-glTF-Exporter.bundle.zip
                destination: revitGltfExporter-assets
            # get package version from PackageContents.xml
            - run:
                name: "Get Package Version"
                command: |
                    cat ./Revit_glTF_Exporter/Revit-glTF-Exporter.bundle/PackageContents.xml | grep "AppVersion" | sed 's/.*"\(.*\)".*/\1/' >> ./tmp/version.txt
                shell: bash.exe
            # persist application manifest so release job can reference version
            - persist_to_workspace:
                root: ./tmp
                paths:
                    - version.txt
                    - Revit-glTF-Exporter.bundle.zip
                    - package.ship

    release:
        docker:
            # use docker go image to leverage ghr library
            - image: circleci/golang:1.10
        steps:
            # mount workspace from build job
            - attach_workspace:
                at: ./tmp
            # publish github release with PackageContents.xml version and stored artifact
            - run:
                name: "Publish Installer on GitHub"
                command: |
                    go get github.com/tcnksm/ghr
                    echo 'export TAG=$(more ./tmp/version.txt)' >> $BASH_ENV
                    source $BASH_ENV
                    ghr -n "Revit glTF Exporter v${TAG}" -b "Description" -t ${GH_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${TAG} ./tmp